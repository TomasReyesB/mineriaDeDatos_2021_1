tiempoMax <- 10800000
while (contadorTiempo < tiempoMax) {
cancionElegida <- cluster[sample(nrow(sampleSongsClusters), 1),]
Playlist <- rbind.data.frame(Playlist, cancionElegida)
contadorTiempo = contadorTiempo + cancionElegida$duration_ms
}
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
Playlist <- NULL
contadorTiempo <- 1
tiempoMax <- 10800000
while (contadorTiempo < tiempoMax) {
cancionElegida <- cluster[sample(nrow(sampleSongsClusters), 1),]
Playlist <- rbind.data.frame(Playlist, cancionElegida)
contadorTiempo = contadorTiempo + cancionElegida$duration_ms
}
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
Playlist <- NULL
contadorTiempo <- 1
tiempoMax <- 10800000
while (contadorTiempo < tiempoMax) {
cancionElegida <- cluster[sample(nrow(sampleSongsClusters), 1),]
Playlist <- rbind.data.frame(Playlist, cancionElegida)
contadorTiempo = contadorTiempo + cancionElegida$duration_ms
}
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
Playlist <- NULL
contadorTiempo <- 1
tiempoMax <- 10800000
while (contadorTiempo < tiempoMax) {
cancionElegida <- cluster[sample(nrow(sampleSongsClusters), 1),]
Playlist <- rbind.data.frame(Playlist, cancionElegida)
contadorTiempo = contadorTiempo + cancionElegida$duration_ms
}
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
Playlist <- NULL
contadorTiempo <- 1
tiempoMax <- 10800000
while (contadorTiempo < tiempoMax) {
cancionElegida <- cluster[sample(nrow(sampleSongsClusters), 1),]
Playlist <- rbind.data.frame(Playlist, cancionElegida)
contadorTiempo = contadorTiempo + cancionElegida$duration_ms
}
x = TRUE
if(is.na(x)) {
x=FALSE
}
else {
x = TRUE
if(is.na(x)) {
x=FALSE
} else {
if(x) {
x
}
}
x = NA
x = NA
if(is.na(x)) {
x=FALSE
} else {
if(x) {
x
}
}
x = NA
if(is.na(x)) {
x=FALSE
x
} else {
if(x) {
x
}
}
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
Playlist <- NULL
contadorTiempo <- 0
tiempoMax <- 10800000
while (contadorTiempo < tiempoMax) {
cancionElegida <- cluster[sample(nrow(sampleSongsClusters), 1),]
Playlist <- rbind.data.frame(Playlist, cancionElegida)
contadorTiempo = contadorTiempo + cancionElegida$duration_ms
}
View(cluster)
summary(cluster)
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
summary(cluster)
Playlist <- NULL
contadorTiempo <- 0
tiempoMax <- 10800000
while (contadorTiempo < tiempoMax) {
cancionElegida <- cluster[sample(nrow(sampleSongsClusters), 1),]
Playlist <- rbind.data.frame(Playlist, cancionElegida)
contadorTiempo = contadorTiempo + as.numeric(cancionElegida$duration_ms)
}
cancionElegida <- cluster[sample(nrow(sampleSongsClusters), 1),]
View(cancionElegida)
cancionElegida <- cluster[sample(nrow(sampleSongsClusters), 1),]
View(cancionElegida)
cancionElegida <- cluster[sample(nrow(sampleSongsClusters), 1),]
View(cancionElegida)
cancionElegida <- cluster[sample(nrow(cluster), 1),]
View(cancionElegida)
cancionElegida <- cluster[sample(nrow(cluster), 1),]
View(cancion)
cancionElegida <- cluster[sample(nrow(cluster), 1),]
View(cancionElegida)
View(cancion)
View(cancionElegida)
cancionElegida <- cluster[sample(nrow(cluster), 1),]
View(cancionElegida)
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
summary(cluster)
Playlist <- NULL
contadorTiempo <- 0
tiempoMax <- 10800000
while (contadorTiempo <= tiempoMax) {
cancionElegida <- cluster[sample(nrow(cluster), 1),]
Playlist <- rbind.data.frame(Playlist, cancionElegida)
contadorTiempo = contadorTiempo + as.numeric(cancionElegida$duration_ms)
}
View(Playlist)
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
summary(cluster)
Playlist <- NULL
contadorTiempo <- 0
tiempoMax <- 10800000
while (contadorTiempo <= tiempoMax) {
cancionElegida <- cluster[sample(nrow(cluster), 1),]
Playlist <- rbind.data.frame(Playlist, cancionElegida)
contadorTiempo = contadorTiempo + as.numeric(cancionElegida$duration_ms)
}
View(Playlist)
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
summary(cluster)
Playlist <- NULL
contadorTiempo <- 0
tiempoMax <- 10800000
while (contadorTiempo <= tiempoMax) {
cancionElegida <- cluster[sample(nrow(cluster), 1),]
Playlist <- rbind.data.frame(Playlist, cancionElegida)
contadorTiempo = contadorTiempo + as.numeric(cancionElegida$duration_ms)
}
View(Playlist)
View(cluster1)
View(cluster2)
View(cluster3)
View(cluster3Num)
View(cluster4)
modeloKmeansCluster <- kmeans(clusterNum, centers = 5)
cluster$clusters <- NULL
cluster$clusters <- modeloKmeansCluster$cluster
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
KmeansCluster <- cluster %>% filter(cluster$clusters == cancionNuevoCluster$clusters)
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
summary(cluster)
Playlist <- NULL
contadorTiempo <- 0
tiempoMax <- 10800000
while (contadorTiempo <= tiempoMax) {
cancionElegida <- cluster[sample(nrow(cluster), 1),]
Playlist <- rbind.data.frame(Playlist, cancionElegida)
contadorTiempo = contadorTiempo + as.numeric(cancionElegida$duration_ms)
}
View(Playlist)
View(cancion)
cancion <- sampleSongsClusters[sample(nrow(sampleSongsClusters), 1),]
print(cancion$artist_name)
print(cancion$track_name)
print(cancion$clusters)
cluster <- sampleSongsClusters %>% filter(sampleSongsClusters$clusters == cancion$clusters)
summary(cluster)
clusterNum <- cluster %>% select(c("key", "danceability", "energy", "loudness", "mode", "speechiness", "acousticness", "instrumentalness", "liveness", "valence", "tempo", "duration_ms"))
coefSil=numeric(30)
for (k in 2:30){
modelo <- kmeans(clusterNum, centers = k)
temp <- silhouette(modelo$cluster,dist(clusterNum))
coefSil[k] <- mean(temp[,3])
}
tempDF=data.frame(CS=coefSil,K=c(1:30))
ggplot(tempDF, aes(x=K, y=CS)) +
geom_line() +
scale_x_continuous(breaks=c(1:30))
kmeansSumaCuadradoscluster <- numeric(30)
for(k in 1:30){
modelo <- kmeans(clusterNum, centers = k)
kmeansSumaCuadradoscluster[k] <- modelo$tot.withinss
}
plot(kmeansSumaCuadradoscluster)
set.seed(500)
modeloKmeansCluster <- kmeans(clusterNum, centers = 5)
cluster$clusters <- NULL
cluster$clusters <- modeloKmeansCluster$cluster
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
KmeansCluster <- cluster %>% filter(cluster$clusters == cancionNuevoCluster$clusters)
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
summary(cluster)
Playlist <- NULL
contadorTiempo <- 0
tiempoMax <- 10800000
while (contadorTiempo <= tiempoMax) {
cancionElegida <- cluster[sample(nrow(cluster), 1),]
Playlist <- rbind.data.frame(Playlist, cancionElegida)
contadorTiempo = contadorTiempo + as.numeric(cancionElegida$duration_ms)
}
View(Playlist)
cancion <- sampleSongsClusters[sample(nrow(sampleSongsClusters), 1),]
print(cancion$artist_name)
print(cancion$track_name)
print(cancion$clusters)
View(cancion)
cluster <- sampleSongsClusters %>% filter(sampleSongsClusters$clusters == cancion$clusters)
summary(cluster)
clusterNum <- cluster %>% select(c("key", "danceability", "energy", "loudness", "mode", "speechiness", "acousticness", "instrumentalness", "liveness", "valence", "tempo", "duration_ms"))
coefSil=numeric(30)
for (k in 2:30){
modelo <- kmeans(clusterNum, centers = k)
temp <- silhouette(modelo$cluster,dist(clusterNum))
coefSil[k] <- mean(temp[,3])
}
tempDF=data.frame(CS=coefSil,K=c(1:30))
ggplot(tempDF, aes(x=K, y=CS)) +
geom_line() +
scale_x_continuous(breaks=c(1:30))
kmeansSumaCuadradoscluster <- numeric(30)
for(k in 1:30){
modelo <- kmeans(clusterNum, centers = k)
kmeansSumaCuadradoscluster[k] <- modelo$tot.withinss
}
plot(kmeansSumaCuadradoscluster)
modeloKmeansCluster <- kmeans(clusterNum, centers = 5)
cluster$clusters <- NULL
cluster$clusters <- modeloKmeansCluster$cluster
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
KmeansCluster <- cluster %>% filter(cluster$clusters == cancionNuevoCluster$clusters)
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
summary(cluster)
Playlist <- NULL
contadorTiempo <- 0
tiempoMax <- 10800000
while (contadorTiempo <= tiempoMax) {
cancionElegida <- cluster[sample(nrow(cluster), 1),]
Playlist <- rbind.data.frame(Playlist, cancionElegida)
contadorTiempo = contadorTiempo + as.numeric(cancionElegida$duration_ms)
}
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
Playlist <- NULL
contadorTiempo <- 0
tiempoMax <- 10800000
while (contadorTiempo <= tiempoMax) {
cancionElegida <- cluster[sample(nrow(cluster), 1),]
Playlist <- rbind.data.frame(Playlist, cancionElegida)
contadorTiempo = contadorTiempo + as.numeric(cancionElegida$duration_ms)
}
View(Playlist)
modeloKmeansCluster <- kmeans(clusterNum, centers = 5)
cluster$clusters <- NULL
cluster$clusters <- modeloKmeansCluster$cluster
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
KmeansCluster <- cluster %>% filter(cluster$clusters == cancionNuevoCluster$clusters)
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
Playlist <- NULL
contadorTiempo <- 0
tiempoMax <- 10800000
while (contadorTiempo <= tiempoMax) {
cancionElegida <- cluster[sample(nrow(cluster), 1),]
Playlist <- rbind.data.frame(Playlist, cancionElegida)
contadorTiempo = contadorTiempo + as.numeric(cancionElegida$duration_ms)
}
View(Playlist)
View(cancion)
cancion <- sampleSongsClusters[sample(nrow(sampleSongsClusters), 1),]
print(cancion$artist_name)
print(cancion$track_name)
print(cancion$clusters)
cluster <- sampleSongsClusters %>% filter(sampleSongsClusters$clusters == cancion$clusters)
summary(cluster)
View(cancion)
clusterNum <- cluster %>% select(c("key", "danceability", "energy", "loudness", "mode", "speechiness", "acousticness", "instrumentalness", "liveness", "valence", "tempo", "duration_ms"))
coefSil=numeric(30)
for (k in 2:30){
modelo <- kmeans(clusterNum, centers = k)
temp <- silhouette(modelo$cluster,dist(clusterNum))
coefSil[k] <- mean(temp[,3])
}
tempDF=data.frame(CS=coefSil,K=c(1:30))
ggplot(tempDF, aes(x=K, y=CS)) +
geom_line() +
scale_x_continuous(breaks=c(1:30))
kmeansSumaCuadradoscluster <- numeric(30)
for(k in 1:30){
modelo <- kmeans(clusterNum, centers = k)
kmeansSumaCuadradoscluster[k] <- modelo$tot.withinss
}
plot(kmeansSumaCuadradoscluster)
modeloKmeansCluster <- kmeans(clusterNum, centers = 5)
cluster$clusters <- NULL
cluster$clusters <- modeloKmeansCluster$cluster
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
KmeansCluster <- cluster %>% filter(cluster$clusters == cancionNuevoCluster$clusters)
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
Playlist <- NULL
contadorTiempo <- 0
tiempoMax <- 10800000
while (contadorTiempo <= tiempoMax) {
cancionElegida <- cluster[sample(nrow(cluster), 1),]
Playlist <- rbind.data.frame(Playlist, cancionElegida)
contadorTiempo = contadorTiempo + as.numeric(cancionElegida$duration_ms)
}
Playlist
print(Playlist)
print.data.frame(Playlist)
? any
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
Playlist <- NULL
contadorTiempo <- 0
tiempoMax <- 10800000
while (contadorTiempo <= tiempoMax) {
cancionElegida <- cluster[sample(nrow(cluster), 1),]
if(any(Playlist$track_id == cancionElegida$track_id)){
next
}
Playlist <- rbind.data.frame(Playlist, cancionElegida)
contadorTiempo = contadorTiempo + as.numeric(cancionElegida$duration_ms)
}
View(Playlist)
cancion <- sampleSongsClusters[sample(nrow(sampleSongsClusters), 1),]
print(cancion$artist_name)
print(cancion$track_name)
print(cancion$clusters)
cluster <- sampleSongsClusters %>% filter(sampleSongsClusters$clusters == cancion$clusters)
summary(cluster)
kmeansSumaCuadradoscluster <- numeric(30)
for(k in 1:30){
modelo <- kmeans(clusterNum, centers = k)
kmeansSumaCuadradoscluster[k] <- modelo$tot.withinss
}
plot(kmeansSumaCuadradoscluster)
modeloKmeansCluster <- kmeans(clusterNum, centers = 5)
cluster$clusters <- NULL
cluster$clusters <- modeloKmeansCluster$cluster
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
KmeansCluster <- cluster %>% filter(cluster$clusters == cancionNuevoCluster$clusters)
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
Playlist <- NULL
contadorTiempo <- 0
tiempoMax <- 10800000
while (contadorTiempo <= tiempoMax) {
cancionElegida <- cluster[sample(nrow(cluster), 1),]
if(any(Playlist$track_id == cancionElegida$track_id)){
next
}
Playlist <- rbind.data.frame(Playlist, cancionElegida)
contadorTiempo = contadorTiempo + as.numeric(cancionElegida$duration_ms)
}
View(Playlist)
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
Playlist <- NULL
contadorTiempo <- cancion$duration_ms
tiempoMax <- 10800000
Playlist <- rbind.data.frame(Playlist, cancion)
while (contadorTiempo <= tiempoMax) {
cancionElegida <- cluster[sample(nrow(cluster), 1),]
if(any(Playlist$track_id == cancionElegida$track_id)){
next
}
Playlist <- rbind.data.frame(Playlist, cancionElegida)
contadorTiempo = contadorTiempo + as.numeric(cancionElegida$duration_ms)
}
View(Playlist)
View(cancionNuevoCluster)
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
Playlist <- NULL
contadorTiempo <- cancion$duration_ms
tiempoMax <- 10800000
Playlist <- rbind.data.frame(Playlist, cancion)
while (contadorTiempo <= tiempoMax) {
cancionElegida <- KmeansCluster[sample(nrow(KmeansCluster), 1),]
if(any(Playlist$track_id == cancionElegida$track_id)){
next
}
Playlist <- rbind.data.frame(Playlist, cancionElegida)
contadorTiempo = contadorTiempo + as.numeric(cancionElegida$duration_ms)
}
View(Playlist)
cancion <- sampleSongsClusters[sample(nrow(sampleSongsClusters), 1),]
print(cancion$artist_name)
print(cancion$track_name)
print(cancion$clusters)
cluster <- sampleSongsClusters %>% filter(sampleSongsClusters$clusters == cancion$clusters)
summary(cluster)
kmeansSumaCuadradoscluster <- numeric(30)
for(k in 1:30){
modelo <- kmeans(clusterNum, centers = k)
kmeansSumaCuadradoscluster[k] <- modelo$tot.withinss
}
plot(kmeansSumaCuadradoscluster)
modeloKmeansCluster <- kmeans(clusterNum, centers = 5)
cluster$clusters <- NULL
cluster$clusters <- modeloKmeansCluster$cluster
modeloKmeansCluster <- kmeans(clusterNum, centers = 5)
cluster$clusters <- NULL
cluster$clusters <- modeloKmeansCluster$cluster
cancion <- sampleSongsClusters[sample(nrow(sampleSongsClusters), 1),]
print(cancion$artist_name)
print(cancion$track_name)
print(cancion$clusters)
cluster <- sampleSongsClusters %>% filter(sampleSongsClusters$clusters == cancion$clusters)
summary(cluster)
clusterNum <- cluster %>% select(c("key", "danceability", "energy", "loudness", "mode", "speechiness", "acousticness", "instrumentalness", "liveness", "valence", "tempo", "duration_ms"))
coefSil=numeric(30)
for (k in 2:30){
modelo <- kmeans(clusterNum, centers = k)
temp <- silhouette(modelo$cluster,dist(clusterNum))
coefSil[k] <- mean(temp[,3])
}
kmeansSumaCuadradoscluster <- numeric(30)
for(k in 1:30){
modelo <- kmeans(clusterNum, centers = k)
kmeansSumaCuadradoscluster[k] <- modelo$tot.withinss
}
plot(kmeansSumaCuadradoscluster)
modeloKmeansCluster <- kmeans(clusterNum, centers = 5)
cluster$clusters <- NULL
cluster$clusters <- modeloKmeansCluster$cluster
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
KmeansCluster <- cluster %>% filter(cluster$clusters == cancionNuevoCluster$clusters)
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
Playlist <- NULL
contadorTiempo <- cancion$duration_ms
tiempoMax <- 10800000
Playlist <- rbind.data.frame(Playlist, cancion)
while (contadorTiempo <= tiempoMax) {
cancionElegida <- KmeansCluster[sample(nrow(KmeansCluster), 1),]
if(any(Playlist$track_id == cancionElegida$track_id)){
next
}
Playlist <- rbind.data.frame(Playlist, cancionElegida)
contadorTiempo = contadorTiempo + as.numeric(cancionElegida$duration_ms)
}
View(Playlist)
print(contadorTiempo)
print.data.frame(PlaylistPrint)
PlaylistPrint <- Playlist %>% select(c("artist_name", "track_name"))
print.data.frame(PlaylistPrint)
View(PlaylistPrint)
cancion <- sampleSongsClusters[sample(nrow(sampleSongsClusters), 1),]
print(cancion$artist_name)
print(cancion$track_name)
print(cancion$clusters)
cluster <- sampleSongsClusters %>% filter(sampleSongsClusters$clusters == cancion$clusters)
summary(cluster)
kmeansSumaCuadradoscluster <- numeric(30)
for(k in 1:30){
modelo <- kmeans(clusterNum, centers = k)
kmeansSumaCuadradoscluster[k] <- modelo$tot.withinss
}
plot(kmeansSumaCuadradoscluster)
modeloKmeansCluster <- kmeans(clusterNum, centers = 5)
cluster$clusters <- NULL
cluster$clusters <- modeloKmeansCluster$cluster
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
KmeansCluster <- cluster %>% filter(cluster$clusters == cancionNuevoCluster$clusters)
cancionNuevoCluster <- cluster %>% filter(cluster$track_id == cancion$track_id)
Playlist <- NULL
contadorTiempo <- cancion$duration_ms
tiempoMax <- 10800000
Playlist <- rbind.data.frame(Playlist, cancion)
while (contadorTiempo <= tiempoMax) {
cancionElegida <- KmeansCluster[sample(nrow(KmeansCluster), 1),]
if(any(Playlist$track_id == cancionElegida$track_id)){
next
}
Playlist <- rbind.data.frame(Playlist, cancionElegida)
contadorTiempo = contadorTiempo + as.numeric(cancionElegida$duration_ms)
}
print(contadorTiempo)
View(Playlist)
head(PlaylistPrint, lenght(PlaylistPrint))
lenght ?
lenght()
lenght()
head(PlaylistPrint)
PlaylistPrint <- Playlist %>% select(c("artist_name", "track_name"))
head(PlaylistPrint)
PlaylistPrint <- Playlist %>% select(c("track_name"))
head(PlaylistPrint)
print.data.frame(Playlist$track_name)
print.data.frame(PlaylistPrint)
library(utils, quietly = TRUE)
head(PlaylistPrint)
head(PlaylistPrint)
head(PlaylistPrint, 5)
library(lemon, quietly = TRUE)
install.packages(lemon)
install.packages("lemon")
library(utils, quietly = TRUE)
head(PlaylistPrint, 5)
PlaylistPrint <- Playlist %>% select(c("track_name"))
tail(PlaylistPrint, 5)
PlaylistPrint
head(as.matrix.data.frame(Playlist))
head(as.matrix.data.frame(PlaylistPrint))
PlaylistPrint <- Playlist %>% select(c("track_name", "artist_name"))
head(as.matrix.data.frame(PlaylistPrint))
head(as.matrix.data.frame(PlaylistPrint), lenght(PlaylistPrint))
head(as.matrix.data.frame(PlaylistPrint))
head(as.matrix.data.frame(PlaylistPrint), nrow(PlaylistPrint))
PlaylistPrint <- Playlist %>% select(c("track_name")
head(as.matrix.data.frame(PlaylistPrint), nrow(PlaylistPrint))
PlaylistPrint <- Playlist %>% select(c("track_name"))
head(as.matrix.data.frame(PlaylistPrint), nrow(PlaylistPrint))
View(Playlist)
