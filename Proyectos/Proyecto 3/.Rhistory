set_engine("kernlab")       %>%
set_mode("classification")  %>%
translate()
modeloFit <-  workflow()              %>%
add_model(modelo)       %>%
add_recipe(receta)      %>%
fit(data = actividadesTrain)
modeloPrediccion <- predict(modeloFit, actividadesTest, type = "prob")  %>%
bind_cols(actividadesTest)
modeloPrediccion %>% roc_auc(truth = actividades.typeCode, .pred_0)
return(modeloPrediccion %>% roc_auc(truth = actividades.typeCode, .pred_0))
}
modeloSVM(1)
modeloSVM(2)
DP_model <-  naiveBayes(actividades.typeCode ~ calories + distance + elev_low +
elev_high + max_speed + moving_time + elapsed_time +
average_speed + total_elevation_gain,
data = actividadesTrain)
PredictionModel <- predict(DP_model, newdata = actividadesTest, type = "raw")
actividadesTest$prob <- PredictionModel[, 2]
curvaROC <- roc(actividades.typeCode ~ prob, data = actividadesTest)
plot(curvaROC)
auc(curvaROC)
modelo <- svm_poly(degree = 3)    %>%
set_engine("kernlab")       %>%
set_mode("classification")  %>%
translate()
modeloFit <-  workflow()              %>%
add_model(modelo)       %>%
add_recipe(receta)      %>%
fit(data = actividadesTrain)
modeloPrediccion <- predict(modeloFit, actividadesCopia, type = "prob")  %>%
bind_cols(actividadesCopia)
modelo <- svm_poly(degree = 3)    %>%
set_engine("kernlab")       %>%
set_mode("classification")  %>%
translate()
modeloFit <-  workflow()              %>%
add_model(modelo)       %>%
add_recipe(receta)      %>%
fit(data = actividadesTrain)
modeloPrediccion <- predict(modeloFit, actividadesTest, type = "prob")  %>%
bind_cols(actividadesTest)
modeloPrediccion %>% roc_auc(truth = actividades.typeCode, .pred_0)
View(actividadesCopia)
View(modeloPrediccion)
modeloPrediccion %>% roc_auc(truth = actividades.typeCode, .pred_0)
View(actividadesTest)
modeloPrediccion <- predict(modeloFit, actividadesCopia, type = "prob")  %>%
bind_cols(actividadesCopia)
actividadesCopia <- actividades
actividades <- na.omit(actividades)
actividades %>% summary()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidymodels)
library(pROC)
library(e1071)
actividadesRaw <- readRDS("endurance.rds")
actividadesRaw %>% summary()
actividades <- actividadesRaw
actividades$type %>% unique()
actividades$id <- NULL
actividades$athlete <- NULL
actividades$device_name <- NULL
actividades$start_date_local <- NULL
actividades$records <- NULL
actividades$has_heartrate <- NULL
actividades$elev_low <- as.numeric(actividades$elev_low)
actividades$elev_high <- as.numeric(actividades$elev_high)
actividades$max_speed <- as.numeric(actividades$max_speed)
actividades$average_speed <- as.numeric(actividades$average_speed)
actividades$typeCode <- (actividades$type == "Ride" | actividades$type == "EBikeRide") %>% as.numeric()
actividades$type <- NULL
columnNames <- c("calories", "distance", "elev_low", "elev_high", "max_speed", "moving_time", "elapsed_time", "average_speed", "total_elevation_gain", "typeCode")
vectorNA <- vector(mode = "list" , 10)
for (i in 1:ncol(actividades)) {
vectorNA[i] <- sum(is.na(actividades[, i]))
}
datasetNA <- rbind.data.frame(columnNames, vectorNA)
datasetNA %>% str()
actividadesNA <-actividades %>% filter(is.na(actividades$elev_high))
actividadesNA %>% summary()
actividadesNA[actividadesNA == 0] <- NA
actividadesNA %>% summary()
actividadesNA$elev_low <- NULL
actividadesNA$elev_high <- NULL
actividadesNA <- na.omit(actividadesNA)
actividadesNA %>% str()
actividades <- na.omit(actividades)
actividades %>% summary()
actividades <- na.omit(actividades)
actividades %>% summary()
actividadesCopia <- actividades
for (i in 1:(ncol(actividades) - 1)) {
boxplot(actividades[, i])
}
actividades <- filter(actividades ,actividades$calories < 2500)
actividades <- filter(actividades ,actividades$distance < 50000)
actividades <- filter(actividades ,actividades$elev_low < 2500)
actividades <- filter(actividades ,actividades$elev_low > -1000)
actividades <- filter(actividades ,actividades$elev_high < 5000)
actividades <- filter(actividades ,actividades$max_speed < 50)
actividades <- filter(actividades ,actividades$moving_time < 25000)
actividades <- filter(actividades ,actividades$elapsed_time < 15000)
actividades <- filter(actividades ,actividades$average_speed < 30)
actividades <- filter(actividades ,actividades$total_elevation_gain < 2000)
actividades$typeCode <- as.factor(actividades$typeCode)
for (i in 1:(ncol(actividades) - 1)) {
boxplot(actividades[, i])
}
tipos <- data.frame(actividades$typeCode)
actividades <-data.frame(scale(actividades[0:9]))
actividades <- cbind.data.frame(actividades, tipos)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidymodels)
library(pROC)
library(e1071)
actividadesRaw <- readRDS("endurance.rds")
actividadesRaw %>% summary()
actividades <- actividadesRaw
actividades$type %>% unique()
actividades$id <- NULL
actividades$athlete <- NULL
actividades$device_name <- NULL
actividades$start_date_local <- NULL
actividades$records <- NULL
actividades$has_heartrate <- NULL
actividades$elev_low <- as.numeric(actividades$elev_low)
actividades$elev_high <- as.numeric(actividades$elev_high)
actividades$max_speed <- as.numeric(actividades$max_speed)
actividades$average_speed <- as.numeric(actividades$average_speed)
actividades$typeCode <- (actividades$type == "Ride" | actividades$type == "EBikeRide") %>% as.numeric()
actividades$type <- NULL
columnNames <- c("calories", "distance", "elev_low", "elev_high", "max_speed", "moving_time", "elapsed_time", "average_speed", "total_elevation_gain", "typeCode")
vectorNA <- vector(mode = "list" , 10)
for (i in 1:ncol(actividades)) {
vectorNA[i] <- sum(is.na(actividades[, i]))
}
datasetNA <- rbind.data.frame(columnNames, vectorNA)
datasetNA %>% str()
actividadesNA <-actividades %>% filter(is.na(actividades$elev_high))
actividadesNA %>% summary()
actividadesNA[actividadesNA == 0] <- NA
actividadesNA %>% summary()
actividadesNA$elev_low <- NULL
actividadesNA$elev_high <- NULL
actividadesNA <- na.omit(actividadesNA)
actividadesNA %>% str()
actividades <- na.omit(actividades)
actividades %>% summary()
for (i in 1:(ncol(actividades) - 1)) {
boxplot(actividades[, i])
}
actividades <- filter(actividades ,actividades$calories < 2500)
actividades <- filter(actividades ,actividades$distance < 50000)
actividades <- filter(actividades ,actividades$elev_low < 2500)
actividades <- filter(actividades ,actividades$elev_low > -1000)
actividades <- filter(actividades ,actividades$elev_high < 5000)
actividades <- filter(actividades ,actividades$max_speed < 50)
actividades <- filter(actividades ,actividades$moving_time < 25000)
actividades <- filter(actividades ,actividades$elapsed_time < 15000)
actividades <- filter(actividades ,actividades$average_speed < 30)
actividades <- filter(actividades ,actividades$total_elevation_gain < 2000)
actividades$typeCode <- as.factor(actividades$typeCode)
for (i in 1:(ncol(actividades) - 1)) {
boxplot(actividades[, i])
}
tipos <- data.frame(actividades$typeCode)
actividades <-data.frame(scale(actividades[0:9]))
actividades <- cbind.data.frame(actividades, tipos)
actividadesCopia <- actividades
modelo <- svm_poly(degree = 3)    %>%
set_engine("kernlab")       %>%
set_mode("classification")  %>%
translate()
modeloFit <-  workflow()              %>%
add_model(modelo)       %>%
add_recipe(receta)      %>%
fit(data = actividadesTrain)
modeloPrediccion <- predict(modeloFit, actividadesCopia, type = "prob")  %>%
bind_cols(actividadesCopia)
View(modeloPrediccion)
View(modeloPrediccion)
modeloPrediccion %>% roc_auc(truth = actividades.typeCode, .pred_0)
modeloPrediccion %>% roc_auc(truth = actividades.typeCode, .pred_0)
curvaROC <- roc(actividades.typeCode ~ .pred0, data = modeloPrediccion)
curvaROC <- roc(actividades.typeCode ~ pred_0, data = actividadesCopia)
curvaROC <- roc(actividades.typeCode ~ .pred_0, data = actividadesCopia)
View(actividadesTest)
for (i in 1:(ncol(actividades) - 1)) {
actividades[, i]
}
for (i in 1:(ncol(actividades) - 1)) {
print(actividades[, i])
}
for (i in 1:(nrow(actividades))) {
print(1)
}
modeloPrediccion$prediccion <- NULL
modeloPrediccion$prediccion <- 2
modeloPrediccion$prediccion <- 2
for (i in 1:(nrow(modeloPrediccion))) {
if modeloPrediccion[i,]$.pred_0 > modeloPrediccion[i,]$.pred_1 {
modeloPrediccion$prediccion <- 2
modeloPrediccion$prediccion <- ifelse(modeloPrediccion$.pred_0 >= modeloPrediccion$.pred_1, 1, 0)
modeloPrediccion$prediccion <- 2
modeloPrediccion$prediccion <- ifelse(modeloPrediccion$.pred_0 >= modeloPrediccion$.pred_1, 0, 1)
modeloPrediccion$prediccion <- ifelse(modeloPrediccion$.pred_0 >= modeloPrediccion$.pred_1, 0, 1)
View(actividades)
View(actividadesRaw)
actividades2 <- actividadesRaw
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidymodels)
library(pROC)
library(e1071)
actividadesRaw <- readRDS("endurance.rds")
actividadesRaw %>% summary()
actividades <- actividadesRaw
actividades2 <- actividadesRaw
actividades$type %>% unique()
actividades$id <- NULL
actividades$athlete <- NULL
actividades$device_name <- NULL
actividades$start_date_local <- NULL
actividades$records <- NULL
actividades$has_heartrate <- NULL
actividades$elev_low <- as.numeric(actividades$elev_low)
actividades$elev_high <- as.numeric(actividades$elev_high)
actividades$max_speed <- as.numeric(actividades$max_speed)
actividades$average_speed <- as.numeric(actividades$average_speed)
actividades$typeCode <- (actividades$type == "Ride" | actividades$type == "EBikeRide") %>% as.numeric()
actividades2$typeCode <- (actividades$type == "Ride" | actividades$type == "EBikeRide") %>% as.numeric()
actividades$type <- NULL
actividades2$type <- NULL
columnNames <- c("calories", "distance", "elev_low", "elev_high", "max_speed", "moving_time", "elapsed_time", "average_speed", "total_elevation_gain", "typeCode")
vectorNA <- vector(mode = "list" , 10)
for (i in 1:ncol(actividades)) {
vectorNA[i] <- sum(is.na(actividades[, i]))
}
datasetNA <- rbind.data.frame(columnNames, vectorNA)
datasetNA %>% str()
actividadesNA <-actividades %>% filter(is.na(actividades$elev_high))
actividadesNA %>% summary()
actividadesNA[actividadesNA == 0] <- NA
actividadesNA %>% summary()
actividadesNA$elev_low <- NULL
actividadesNA$elev_high <- NULL
actividadesNA <- na.omit(actividadesNA)
actividadesNA %>% str()
actividades <- na.omit(actividades)
actividades2 <- na.omit(actividades2)
actividades %>% summary()
actividades$elev_low <- as.numeric(actividades$elev_low)
actividades$elev_high <- as.numeric(actividades$elev_high)
actividades$max_speed <- as.numeric(actividades$max_speed)
actividades$average_speed <- as.numeric(actividades$average_speed)
actividades2$elev_low <- as.numeric(actividades$elev_low)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidymodels)
library(pROC)
library(e1071)
actividadesRaw <- readRDS("endurance.rds")
actividadesRaw %>% summary()
actividades <- actividadesRaw
actividades2 <- actividadesRaw
actividades$type %>% unique()
actividades$id <- NULL
actividades$athlete <- NULL
actividades$device_name <- NULL
actividades$start_date_local <- NULL
actividades$records <- NULL
actividades$has_heartrate <- NULL
actividades$elev_low <- as.numeric(actividades$elev_low)
actividades$elev_high <- as.numeric(actividades$elev_high)
actividades$max_speed <- as.numeric(actividades$max_speed)
actividades$average_speed <- as.numeric(actividades$average_speed)
actividades2$elev_low <- as.numeric(actividades$elev_low)
actividades2$elev_high <- as.numeric(actividades$elev_high)
actividades2$max_speed <- as.numeric(actividades$max_speed)
actividades2$average_speed <- as.numeric(actividades$average_speed)
actividades$typeCode <- (actividades$type == "Ride" | actividades$type == "EBikeRide") %>% as.numeric()
actividades2$typeCode <- (actividades$type == "Ride" | actividades$type == "EBikeRide") %>% as.numeric()
actividades$type <- NULL
actividades2$type <- NULL
columnNames <- c("calories", "distance", "elev_low", "elev_high", "max_speed", "moving_time", "elapsed_time", "average_speed", "total_elevation_gain", "typeCode")
vectorNA <- vector(mode = "list" , 10)
for (i in 1:ncol(actividades)) {
vectorNA[i] <- sum(is.na(actividades[, i]))
}
datasetNA <- rbind.data.frame(columnNames, vectorNA)
datasetNA %>% str()
actividadesNA <-actividades %>% filter(is.na(actividades$elev_high))
actividadesNA %>% summary()
actividadesNA[actividadesNA == 0] <- NA
actividadesNA %>% summary()
actividadesNA$elev_low <- NULL
actividadesNA$elev_high <- NULL
actividadesNA <- na.omit(actividadesNA)
actividadesNA %>% str()
actividades <- na.omit(actividades)
actividades2 <- na.omit(actividades2)
actividades %>% summary()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidymodels)
library(pROC)
library(e1071)
actividadesRaw <- readRDS("endurance.rds")
actividadesRaw %>% summary()
actividades <- actividadesRaw
actividades2 <- actividadesRaw
actividades$type %>% unique()
actividades$id <- NULL
actividades$athlete <- NULL
actividades$device_name <- NULL
actividades$start_date_local <- NULL
actividades$records <- NULL
actividades$has_heartrate <- NULL
actividades$elev_low <- as.numeric(actividades$elev_low)
actividades$elev_high <- as.numeric(actividades$elev_high)
actividades$max_speed <- as.numeric(actividades$max_speed)
actividades$average_speed <- as.numeric(actividades$average_speed)
actividades$typeCode <- (actividades$type == "Ride" | actividades$type == "EBikeRide") %>% as.numeric()
actividades2$typeCode <- (actividades$type == "Ride" | actividades$type == "EBikeRide") %>% as.numeric()
actividades$type <- NULL
actividades2$type <- NULL
View(actividades2)
columnNames <- c("calories", "distance", "elev_low", "elev_high", "max_speed", "moving_time", "elapsed_time", "average_speed", "total_elevation_gain", "typeCode")
vectorNA <- vector(mode = "list" , 10)
for (i in 1:ncol(actividades)) {
vectorNA[i] <- sum(is.na(actividades[, i]))
}
datasetNA <- rbind.data.frame(columnNames, vectorNA)
datasetNA %>% str()
actividadesNA <-actividades %>% filter(is.na(actividades$elev_high))
actividadesNA %>% summary()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidymodels)
library(pROC)
library(e1071)
actividadesRaw <- readRDS("endurance.rds")
actividadesRaw %>% summary()
actividades <- actividadesRaw
actividades2 <- actividadesRaw
actividades$type %>% unique()
actividades$id <- NULL
actividades$athlete <- NULL
actividades$device_name <- NULL
actividades$start_date_local <- NULL
actividades$records <- NULL
actividades$has_heartrate <- NULL
actividades2$athlete <- NULL
actividades2$device_name <- NULL
actividades2$start_date_local <- NULL
actividades2$records <- NULL
actividades2$has_heartrate <- NULL
actividades$elev_low <- as.numeric(actividades$elev_low)
actividades$elev_high <- as.numeric(actividades$elev_high)
actividades$max_speed <- as.numeric(actividades$max_speed)
actividades$average_speed <- as.numeric(actividades$average_speed)
actividades2$elev_low <- as.numeric(actividades$elev_low)
actividades2$elev_high <- as.numeric(actividades$elev_high)
actividades2$max_speed <- as.numeric(actividades$max_speed)
actividades2$average_speed <- as.numeric(actividades$average_speed)
actividades$typeCode <- (actividades$type == "Ride" | actividades$type == "EBikeRide") %>% as.numeric()
actividades2$typeCode <- (actividades$type == "Ride" | actividades$type == "EBikeRide") %>% as.numeric()
actividades$type <- NULL
actividades2$type <- NULL
columnNames <- c("calories", "distance", "elev_low", "elev_high", "max_speed", "moving_time", "elapsed_time", "average_speed", "total_elevation_gain", "typeCode")
vectorNA <- vector(mode = "list" , 10)
for (i in 1:ncol(actividades)) {
vectorNA[i] <- sum(is.na(actividades[, i]))
}
datasetNA <- rbind.data.frame(columnNames, vectorNA)
datasetNA %>% str()
actividadesNA <-actividades %>% filter(is.na(actividades$elev_high))
actividadesNA %>% summary()
actividadesNA[actividadesNA == 0] <- NA
actividadesNA %>% summary()
actividadesNA$elev_low <- NULL
actividadesNA$elev_high <- NULL
actividadesNA <- na.omit(actividadesNA)
actividadesNA %>% str()
actividades <- na.omit(actividades)
actividades %>% summary()
actividades <- na.omit(actividades)
actividades2 <- na.omit(actividades2)
actividades %>% summary()
actividades <- filter(actividades ,actividades$calories < 2500)
actividades <- filter(actividades ,actividades$distance < 50000)
actividades <- filter(actividades ,actividades$elev_low < 2500)
actividades <- filter(actividades ,actividades$elev_low > -1000)
actividades <- filter(actividades ,actividades$elev_high < 5000)
actividades <- filter(actividades ,actividades$max_speed < 50)
actividades <- filter(actividades ,actividades$moving_time < 25000)
actividades <- filter(actividades ,actividades$elapsed_time < 15000)
actividades <- filter(actividades ,actividades$average_speed < 30)
actividades <- filter(actividades ,actividades$total_elevation_gain < 2000)
actividades2 <- filter(actividades ,actividades$calories < 2500)
actividades2 <- filter(actividades ,actividades$distance < 50000)
actividades2 <- filter(actividades ,actividades$elev_low < 2500)
actividades2 <- filter(actividades ,actividades$elev_low > -1000)
actividades2 <- filter(actividades ,actividades$elev_high < 5000)
actividades2 <- filter(actividades ,actividades$max_speed < 50)
actividades2 <- filter(actividades ,actividades$moving_time < 25000)
actividades2 <- filter(actividades ,actividades$elapsed_time < 15000)
actividades2 <- filter(actividades ,actividades$average_speed < 30)
actividades2 <- filter(actividades ,actividades$total_elevation_gain < 2000)
actividades$typeCode <- as.factor(actividades$typeCode)
actividades2$typeCode <- as.factor(actividades2$typeCode)
View(actividades2)
actividades2$prediccion <- ifelse(modeloPrediccion$.pred_0 >= modeloPrediccion$.pred_1, 0, 1)
View(actividades2)
actividadesErroneas <- actividades2 %>% filter(typeCode != prediccion)
View(actividadesErroneas)
View(actividades2)
actividades <- actividadesRaw
actividades2 <- actividadesRaw
actividades$type %>% unique()
actividades$id <- NULL
actividades$athlete <- NULL
actividades$device_name <- NULL
actividades$start_date_local <- NULL
actividades$records <- NULL
actividades$has_heartrate <- NULL
actividades2$athlete <- NULL
actividades2$device_name <- NULL
actividades2$start_date_local <- NULL
actividades2$records <- NULL
actividades2$has_heartrate <- NULL
View(actividades2)
actividades$elev_low <- as.numeric(actividades$elev_low)
actividades$elev_high <- as.numeric(actividades$elev_high)
actividades$max_speed <- as.numeric(actividades$max_speed)
actividades$average_speed <- as.numeric(actividades$average_speed)
actividades2$elev_low <- as.numeric(actividades$elev_low)
actividades2$elev_high <- as.numeric(actividades$elev_high)
actividades2$max_speed <- as.numeric(actividades$max_speed)
actividades2$average_speed <- as.numeric(actividades$average_speed)
actividades$typeCode <- (actividades$type == "Ride" | actividades$type == "EBikeRide") %>% as.numeric()
actividades2$typeCode <- (actividades$type == "Ride" | actividades$type == "EBikeRide") %>% as.numeric()
actividades$type <- NULL
actividades2$type <- NULL
columnNames <- c("calories", "distance", "elev_low", "elev_high", "max_speed", "moving_time", "elapsed_time", "average_speed", "total_elevation_gain", "typeCode")
vectorNA <- vector(mode = "list" , 10)
for (i in 1:ncol(actividades)) {
vectorNA[i] <- sum(is.na(actividades[, i]))
}
datasetNA <- rbind.data.frame(columnNames, vectorNA)
datasetNA %>% str()
actividadesNA <-actividades %>% filter(is.na(actividades$elev_high))
actividadesNA %>% summary()
actividadesNA[actividadesNA == 0] <- NA
actividadesNA %>% summary()
actividadesNA$elev_low <- NULL
actividadesNA$elev_high <- NULL
actividadesNA <- na.omit(actividadesNA)
actividadesNA %>% str()
actividades <- na.omit(actividades)
actividades2 <- na.omit(actividades2)
actividades %>% summary()
actividades <- filter(actividades ,actividades$calories < 2500)
actividades <- filter(actividades ,actividades$distance < 50000)
actividades <- filter(actividades ,actividades$elev_low < 2500)
actividades <- filter(actividades ,actividades$elev_low > -1000)
actividades <- filter(actividades ,actividades$elev_high < 5000)
actividades <- filter(actividades ,actividades$max_speed < 50)
actividades <- filter(actividades ,actividades$moving_time < 25000)
actividades <- filter(actividades ,actividades$elapsed_time < 15000)
actividades <- filter(actividades ,actividades$average_speed < 30)
actividades <- filter(actividades ,actividades$total_elevation_gain < 2000)
actividades2 <- filter(actividades2 ,actividades2$calories < 2500)
actividades2 <- filter(actividades2 ,actividades2$distance < 50000)
actividades2 <- filter(actividades2 ,actividades2$elev_low < 2500)
actividades2 <- filter(actividades2 ,actividades2$elev_low > -1000)
actividades2 <- filter(actividades2 ,actividades2$elev_high < 5000)
actividades2 <- filter(actividades2 ,actividades2$max_speed < 50)
actividades2 <- filter(actividades2 ,actividades2$moving_time < 25000)
actividades2 <- filter(actividades2 ,actividades2$elapsed_time < 15000)
actividades2 <- filter(actividades2 ,actividades2$average_speed < 30)
actividades2 <- filter(actividades2 ,actividades2$total_elevation_gain < 2000)
actividades$typeCode <- as.factor(actividades$typeCode)
actividades2$typeCode <- as.factor(actividades2$typeCode)
actividades2$prediccion <- ifelse(modeloPrediccion$.pred_0 >= modeloPrediccion$.pred_1, 0, 1)
actividadesErroneas <- actividades2 %>% filter(typeCode != prediccion)
View(actividadesErroneas)
head(actividadesErroneas, 20)
head(actividadesErroneas)
actividadesErroneas %>% head(20)
actividadesErroneas %>% head(n = 20)
actividadesErroneas %>% head(n = 20L)
actividadesErroneas %>% head(n = 20L) %>% as.table()
actividadesErroneas %>% as.table() %>% head(n = 20L)
head.matrix(actividadesErroneas, n = 20)
head(as.data.frame.table(actividadesErroneas), 20)
head(as.table(actividadesErroneas), 20)
glimpse(actividadesErroneas)
head(actividadesErroneas)
head(actividadesErroneas)
print(head(actividadesErroneas))
dataTable <- as.table(actividadesErroneas)
actividadesErroneas
class(actividadesErroneas)
view(actividadesErroneas)
head(actividadesErroneas)
nrow(actividadesErroneas)
nrow(actividadesErroneas)
